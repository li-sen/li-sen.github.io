<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PAAS on Lisen Blog</title>
    <link>https://li-sen.github.io/categories/paas/</link>
    <description>Recent content in PAAS on Lisen Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 08 Oct 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://li-sen.github.io/categories/paas/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>k8s部署高可用harbor</title>
      <link>https://li-sen.github.io/2018/10/08/k8s%E9%83%A8%E7%BD%B2%E9%AB%98%E5%8F%AF%E7%94%A8harbor/</link>
      <pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://li-sen.github.io/2018/10/08/k8s%E9%83%A8%E7%BD%B2%E9%AB%98%E5%8F%AF%E7%94%A8harbor/</guid>
      <description>前言 harbor 是目前最流行的开源镜像仓库，不过之前部署都是基于Docker Compose，基本无高可用可言，上不了生产环境。不过了harbor-he</description>
    </item>
    
    <item>
      <title>jenkins-cicd-on-kubernetes</title>
      <link>https://li-sen.github.io/2018/09/23/jenkins-cicd-on-kubernetes/</link>
      <pubDate>Sun, 23 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://li-sen.github.io/2018/09/23/jenkins-cicd-on-kubernetes/</guid>
      <description>kubernetes ci/cd 开源实现有很多，传统的有霸主jenkins、后起之秀drone、Spinnaker、gitlab-ci以及jenkins-kuberne</description>
    </item>
    
    <item>
      <title>traefik配置https</title>
      <link>https://li-sen.github.io/2018/09/20/traefik%E9%85%8D%E7%BD%AEhttps/</link>
      <pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://li-sen.github.io/2018/09/20/traefik%E9%85%8D%E7%BD%AEhttps/</guid>
      <description>目前所有的访问都已经转向https了，大势所趋，ssl重要性这里不细说了；我这里是client到traefik加密，后端还是http，有更高</description>
    </item>
    
    <item>
      <title>Istio v1aplha3 routing API介绍(译文）</title>
      <link>https://li-sen.github.io/2018/09/09/introducing-the-istio-v1alpha3-routing-api/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://li-sen.github.io/2018/09/09/introducing-the-istio-v1alpha3-routing-api/</guid>
      <description>&lt;p&gt;到目前为止，Istio提供了一个简单的API来进行流量管理，该API包括了四种资源：RouteRule，DestinationPolicy，EgressRule和Ingress（直接使用了Kubernets的Ingress资源）。借助此API，用户可以轻松管理Istio服务网格中的流量。该API允许用户将请求路由到特定版本的服务，为弹性测试注入延迟和失败，添加超时和断路器等等，所有这些功能都不必更改应用程序本身的代码。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>